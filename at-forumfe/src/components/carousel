import React, { useEffect, useRef, useState } from "react";
import useFetch from "../hooks/fetchData";
import "../assets/css/carousel.css"; // Ensure you have the correct path to your CSS file
export default function CarouselSider() {
  const data = useFetch("http://localhost:5000/api/thread");
  const containerRef = useRef(null);
  const contentRef = useRef(null);
  const navigationRef = useRef(null);
  const sliderWrapperRef = useRef(null);
  const [currentIndex, setCurrentIndex] = useState(0);

  useEffect(() => {
    if (!data || data.length === 0) return;

    const container = containerRef.current;
    const content = contentRef.current;
    const navigation = navigationRef.current;
    const sliderWrapper = sliderWrapperRef.current;

    if (!container || !content || !navigation || !sliderWrapper) return;

    // Setup initial DOM content
    container.classList.add(`${data[0].title}`);
    navigation.innerHTML = "";
    content.innerHTML = "";
    sliderWrapper.innerHTML = "";

    
    for (let i = 0; i < data.length; i++) {
      const currentData = data[i];
      container.style.setProperty("background-image", `url(${currentData.image})`);
      navigation.innerHTML += `
        <li class="navigation-item">
          <span></span>
          <span>${i + 1}</span>
        </li>`;

      content.innerHTML += `
        <div class="content-wrapper">
          <h1 class="content-title">${currentData.title}</h1>
          <p class="content-description">${currentData.description}</p>
          <div class="status">
            <h4>Facts</h4>
            <ul class="status-items">
              <li class="status-item">
                <span class="status-label">Status:</span>
                <span class="status-value">${currentData.status}</span>
              </li>
              <li class="status-item">
                <span class="status-label">Views:</span>
                <span class="status-views">${currentData.views}</span>
              </li>
            </ul>
          </div>
        </div>`;

      // sliderWrapper.innerHTML += `
      //   <li class="slider-item">
      //     <img src="${currentData.image}" alt="${currentData.title}" />
      //   </li>`;
    }

    navigation.children[0]?.classList.add("active");
    content.children[0]?.classList.add("show");
    sliderWrapper.children[0]?.classList.add("active");

    let current = 0;

    const handleTransition = (prevIndex, nextIndex) => {
      container.classList.add(`${data[nextIndex].title}`);
      container.classList.remove(`${data[prevIndex].title}`);
      content.children[prevIndex]?.classList.remove("show");
      content.children[nextIndex]?.classList.add("show");
      navigation.children[prevIndex]?.classList.remove("active");
      navigation.children[nextIndex]?.classList.add("active");
      sliderWrapper.children[prevIndex]?.classList.remove("active");
      sliderWrapper.children[nextIndex]?.classList.add("active");
      sliderWrapper.style.setProperty("--index", nextIndex);
    };

    const prevBtn = container.querySelector(".prev-btn");
    const nextBtn = container.querySelector(".next-btn");

    if (!prevBtn || !nextBtn) return;

    const onNextClick = () => {
      const prev = current;
      if (current < data.length - 1) {
        current += 1;
        handleTransition(prev, current);
        prevBtn.disabled = false;
        if (current === data.length - 1) nextBtn.disabled = true;
      }
    };

    const onPrevClick = () => {
      const prev = current;
      if (current > 0) {
        current -= 1;
        handleTransition(prev, current);
        nextBtn.disabled = false;
        if (current === 0) prevBtn.disabled = true;
      }
    };

    prevBtn.disabled = true;
    nextBtn.disabled = false;

    nextBtn.addEventListener("click", onNextClick);
    prevBtn.addEventListener("click", onPrevClick);

    return () => {
      nextBtn.removeEventListener("click", onNextClick);
      prevBtn.removeEventListener("click", onPrevClick);
    };
  }, [data]);

  return (
    <>
      <div className="slider-container" ref={containerRef}>
        <ul className="navigation" ref={navigationRef}></ul>

        <div className="content" ref={contentRef}></div>

        {/* <div className="slider">
          <button className="prev-btn">Back</button>
          <button className="next-btn">Next</button>
          <ul
            className="slider-wrapper"
            ref={sliderWrapperRef}
            style={{ "--index": 0 }}
          ></ul>
        </div> */}
      </div>
    </>
  );
}
